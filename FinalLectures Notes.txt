Axios  : to consume restful API
---------------------------------
1- installation :
npm install --save axios vue-axios

2- use ( register it )

import Vue from 'vue'
import axios from 'axios'
import VueAxios from 'vue-axios'

Vue.use(VueAxios, axios)


3- using 
Vue.axios.get(api).then((response) => {
  console.log(response.data)
})
 
4- Consule your  API like
https://jsonplaceholder.typicode.com/

=> Vue.axios.get("APILink").then(response=>{.....}).catch(error=>{....}).finally(()=>{....})
*- select => get
*- add = > post
*- update -> put (check if the resource exist then update)
*->update-> patch-> (always update without check)
*-> delete ->delete





fetch API
Addpost(){
            let addedpost={id:100,title:'Nasr Post'};
            fetch('https://jsonplaceholder.typicode.com/posts',{
                method:'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(addedpost)
            }).then((response)=>response.json())
                .then(data=>{this.posts.unshift(data)})
                        
        },
async loadposts(){

            let allposts=await fetch('https://jsonplaceholder.typicode.com/posts');
            let allpostsasjson = await allposts.json();
            this.posts=allpostsasjson;
        }







----------------------------------------
steps for routers in vue3

https://www.npmjs.com/package/vue-router/v/next
	npm i vue-router@4.0.5

1- in main .js
	import { createWebHistory, createRouter } from "vue-router";
2- in main .js import components
3- const routes=[
      {path:'/',component:home},
      {path:'/about',component:about},
      {path:'/contact',component:contact},
      {path:'/products',component:products},
      {path:'/products/:productid',props:true,component:productdetails},//dynamic segment
      {path:'/:catchAll(.*)',component:handeler}
    ];
    const router = createRouter({history:createWebHistory(),routes});

4- createApp(containercomponent).use(router).mount("#app")  

5- in containercomponent =>  add router-view and router links
<div class="container mt-2">Container Page</div>
    <div class="row">
        <ul>
            <li><router-link to="/">Home</router-link></li>
            <li><router-link to="/about">About</router-link></li>
            <li><router-link to="/contact">Contact</router-link></li>
            <li><router-link to="/products">products</router-link></li>
        </ul>
    </div>
    <div class="row">
        <router-view class="col-12"></router-view>
    </div>

6- Details Component
$route.params.productid
this.$router.go(-1);
this.$router.push('/');







-------------------------------------------------------------------------
version two vue js

2- Routing
a- install vue-router
	npm install vue-router


in main js
---------	
import Router from 'vue-router'
Vue.use(Router);

b- var router = new Router({
  routes:[
    {path:'/',component:home},
    {path:'/about',component:about},
    {path:'/contact',component:contact},
    {path:'/products',component:products},
    {path:'/products/:productid',component:productdetails},
  ],
mode:'history'

});

c- new Vue({
  render: function (h) { return h(App) },
  router,
}).$mount('#app')

d- in App.vue
	<router-view></router-view>

e- navigate manualy
f- add some <router-link to=""></router-link>

	<ul>
            <li><router-link to="/">Home</router-link></li>
            <li><router-link to="/contact">contact</router-link></li>
            <li><router-link to="/about">about</router-link></li>
          </ul>

-------------------------
VUEX vuejs-3
https://www.positronx.io/vue-js-vuex-state-management-tutorial-by-example/
https://dev.to/daniel_adekoya_/how-to-initialize-vuex-in-the-new-vue-3-preview-49ef


1- install : npm install vuex@next 
	https://www.npmjs.com/package/vuex/v/next
	npm install vuex
	npm i vuex@4.0.0

2- create your store (mystore.js)

import { createStore } from "vuex" 
const store = createStore({
   state:{
      counter: 0
   },
   getters:{
    counter:function(state){
      return state.counter;
    },
    doubledcounter:function(state){
      return state.counter*2;
    }
  },
  mutations:{
    increase:function(state){
      state.counter++;
    },
    decrease:function(state){
      state.counter--;
    }
  },
  actions:{
    updateafteronesecond:function({commit}){
      setTimeout(function(){
        commit('increase');
      },1000);
    }
  }

});

export default store

3- main.js
a- import store js file
b- update :::  createApp(mycomponent).use(store).mount("#app")  





4- in your component
<template>
    <div class="container">
        <h3>Hello From Vue X</h3>
        <p class="text-center">{{counter}}</p>
        <div class="col-12 text-center ">
            <button class="btn btn-primary m-2" @click="increasecounter">+</button>
            <button class="btn btn-danger m-2" @click="decreasecounter">-</button>
        </div>
    </div>
</template>

<script>
export default {
    computed:{
        counter(){
            return this.$store.getters.counter;
        }
    },
    methods:{
        increasecounter(){
            this.$store.commit("increase");
        },
        decreasecounter(){
            this.$store.commit("decrease");
        }
    }
}
</script>

//--- update to include your getters and mutations from store dirst inside your component --
<script>
import {mapMutations,mapGetters} from 'vuex'

export default {
    computed:{
        counter(){
            return this.$store.getters.counter;
        }
    },
    methods:{
	...mapMutations(["increase","decrease"])
        /*increasecounter(){
            this.$store.commit("increase");
        },
        decreasecounter(){
            this.$store.commit("decrease");
        }*/
    }
}
</script>





--------------------------------------------------------
version 2


	


2- import Vuex from 'vuex'
3- Vue.use(Vuex);
4- creat store
const store = new Vuex.Store({
  state:{
    counter:0
  },
// getters
  getters:{
    counter:function(state){
      return state.counter;
    },
    doubledcounter:function(state){
      return state.counter*2;
    }
  },
  mutations:{
    increase:function(state){
      state.counter++;
    },
    decrease:function(state){
      state.counter--;
    }
  },
  actions:{
    updateafteronesecond:function({commit}){
      setTimeout(function(){
        commit('increase');
      },1000);
    }
  }


});

5- in main js
new Vue({
  render: function (h) { return h(App) },
  store,
}).$mount('#app')


App.vue

<template>
    <div>
        <h1>{{counter}}</h1>        
        <button @click="increase">+</button>
        <button @click="decrease">-</button>
    </div>
</template>
<script>
import Vuex from 'vue'
export default {
    data(){

    },
    computed:{
        counter:function(){
            return this.$store.getters.counter;
        }
    },
    methods:{
        increase:function(){
            this.$store.commit("increase");
        },
        decrease:function(){
            this.$store.commit("decrease");
        },
    }
}
</script>
